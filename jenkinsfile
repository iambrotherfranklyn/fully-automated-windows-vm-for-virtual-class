pipeline {
    agent any

    environment {
        // Define environment variables if needed
        TF_VERSION = '0.14.5' // Example: Set your Terraform version
        TERRAFORM_REPO = 'https://github.com/iambrotherfranklyn/fully-automated-windows-vm-for-virtual-class' 
    }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'SELECT EITHER APPLY OR DESTROY')
    }

    stages {
        stage('Checkout SCM') {
            steps {
                // Checkout the Jenkins repository
                checkout scm
            }
        }

        stage('Checkout Terraform Repository') {
            steps {
                // Checkout the Terraform repository from the 'main' branch
                git branch: 'main', url: TERRAFORM_REPO
            }
        }

        stage('Initialize Terraform') {
            steps {
                script {
                    withCredentials([azureServicePrincipal(credentialsId: 'azurelogin', subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID', tenantIdVariable: 'ARM_TENANT_ID', clientIdVariable: 'ARM_CLIENT_ID', clientSecretVariable: 'ARM_CLIENT_SECRET')]) {
                        // Terraform initialization
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Plan Terraform') {
            steps {
                script {
                    // Only plan if ACTION is 'apply'
                    if (params.ACTION == 'apply') {
                        withCredentials([azureServicePrincipal(credentialsId: 'azurelogin', subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID', tenantIdVariable: 'ARM_TENANT_ID', clientIdVariable: 'ARM_CLIENT_ID', clientSecretVariable: 'ARM_CLIENT_SECRET')]) {
                            // Terraform plan
                            sh 'terraform plan'
                        }
                    }
                }
            }
        }

        stage('Apply or Destroy Terraform') {
            steps {
                script {
                    withCredentials([azureServicePrincipal(credentialsId: 'azurelogin', subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID', tenantIdVariable: 'ARM_TENANT_ID', clientIdVariable: 'ARM_CLIENT_ID', clientSecretVariable: 'ARM_CLIENT_SECRET')]) {
                        if (params.ACTION == 'apply') {
                            // Apply Terraform
                            sh 'terraform apply -auto-approve'
                        } else if (params.ACTION == 'destroy') {
                            // Destroy Terraform
                            sh 'terraform destroy -auto-approve'
                        }
                    }
                }
            }
        }
    }
}
